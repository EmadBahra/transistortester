Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
                              main.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                              main.o (itoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                              main.o (utoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                              lcd-routines.o (__eerd_byte_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                              main.o (__eerd_word_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                              main.o (__eewr_byte_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                              main.o (__eewr_word_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o) (__eerd_blraw_m168)

Allocating common symbols
Common symbol       size              file

resis680mi          0x2               main.o
PartReady           0x1               main.o
NumOfDiodes         0x1               main.o
PartMode            0x1               main.o
PartFound           0x1               main.o
resis680pl          0x2               main.o
tmpval              0x1               main.o
mess_count          0x1               main.o
outval              0xc               main.o
resis               0x21              main.o
ADCconfig           0x6               main.o
ref_mv              0x2               main.o
tmpval2             0x1               main.o
WithReference       0x1               main.o
empty_count         0x1               main.o
ii                  0x1               main.o
pin_combination     0x1               main.o
trans               0xf               main.o
ResistorsFound      0x1               main.o
gthvoltage          0x2               main.o
cap                 0x12              main.o
load_diff           0x2               main.o
diodes              0x18              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
LOAD lcd-routines.o
LOAD lcd_hw_4_bit.o
LOAD main.o
LOAD swuart.o
LOAD wait1000ms.o
LOAD ReadCapacity.o
LOAD ReadInductance.o
LOAD ReadADC.o
LOAD GetESR.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3db0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0xb5 main.o
                0x0000000000000068                LogTab
                0x00000000000000c4                SELFTEST
                0x00000000000000d4                RELPROBE
                0x00000000000000e3                URefT
                0x00000000000000e8                RHfakt
                0x00000000000000ed                RH1L
                0x00000000000000f1                RH1H
                0x00000000000000f5                RLRL
                0x0000000000000103                RHRH
                0x0000000000000111                RHRL
                0x0000000000000117                T50HZ
                0x000000000000011e                . = ALIGN (0x2)
 *fill*         0x000000000000011d        0x1 00
                0x000000000000011e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000011e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000011e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000011e                __ctors_start = .
 *(.ctors)
                0x000000000000011e                __ctors_end = .
                0x000000000000011e                __dtors_start = .
 *(.dtors)
                0x000000000000011e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000011e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x000000000000011e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000011e        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000012a       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x000000000000012a                __do_copy_data
 .init4         0x0000000000000140       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000140                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000150        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000000000000158        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x0000000000000158                __vector_22
                0x0000000000000158                __vector_1
                0x0000000000000158                __vector_24
                0x0000000000000158                __vector_12
                0x0000000000000158                __bad_interrupt
                0x0000000000000158                __vector_6
                0x0000000000000158                __vector_3
                0x0000000000000158                __vector_23
                0x0000000000000158                __vector_25
                0x0000000000000158                __vector_11
                0x0000000000000158                __vector_13
                0x0000000000000158                __vector_17
                0x0000000000000158                __vector_19
                0x0000000000000158                __vector_5
                0x0000000000000158                __vector_4
                0x0000000000000158                __vector_9
                0x0000000000000158                __vector_2
                0x0000000000000158                __vector_15
                0x0000000000000158                __vector_8
                0x0000000000000158                __vector_14
                0x0000000000000158                __vector_10
                0x0000000000000158                __vector_16
                0x0000000000000158                __vector_18
                0x0000000000000158                __vector_20
 .text          0x000000000000015c      0x19a lcd-routines.o
                0x000000000000015c                lcd_data
                0x00000000000001be                lcd_space
                0x00000000000001c6                lcd_testpin
                0x00000000000001ce                uart_newline
                0x00000000000001dc                lcd_command
                0x00000000000001fc                lcd_clear
                0x0000000000000212                lcd_init
                0x000000000000025e                lcd_string
                0x0000000000000286                lcd_pgm_string
                0x00000000000002a6                lcd_fix_string
                0x00000000000002c8                lcd_fix_customchar
 .text          0x00000000000002f6       0x5c lcd_hw_4_bit.o
                0x00000000000002f6                _lcd_hw_write
 .text          0x0000000000000352     0x2680 main.o
                0x0000000000000352                __vector_7
                0x0000000000000354                __vector_21
                0x0000000000000356                EntladePins
                0x000000000000048c                RefVoltage
                0x000000000000052c                lcd_clear_line
                0x000000000000053c                DisplayValue
                0x00000000000006a8                RvalOut
                0x00000000000006dc                mVAusgabe
                0x000000000000070c                UfAusgabe
                0x0000000000000734                sleep_5ms
                0x000000000000077a                ChargePin10ms
                0x00000000000007b0                CheckPins
                0x0000000000001536                AutoCheck
                0x0000000000001eba                main
 .text          0x00000000000029d2       0x40 swuart.o
                0x00000000000029d2                uart_putc
 .text          0x0000000000002a12       0x4a wait1000ms.o
                0x0000000000002a12                wait5s
                0x0000000000002a14                wait4s
                0x0000000000002a16                wait3s
                0x0000000000002a18                wait2s
                0x0000000000002a1a                wait1000ms
                0x0000000000002a1a                wait1s
                0x0000000000002a1c                wait500ms
                0x0000000000002a1e                wait400ms
                0x0000000000002a20                wait300ms
                0x0000000000002a22                wait200ms
                0x0000000000002a24                wait100ms
                0x0000000000002a28                wait50ms
                0x0000000000002a2a                wait40ms
                0x0000000000002a2c                wait30ms
                0x0000000000002a2e                wait20ms
                0x0000000000002a30                wait10ms
                0x0000000000002a32                wait5ms
                0x0000000000002a34                wait4ms
                0x0000000000002a36                wait3ms
                0x0000000000002a38                wait2ms
                0x0000000000002a3a                wait1ms
                0x0000000000002a3c                wait500us
                0x0000000000002a3e                wait400us
                0x0000000000002a40                wait300us
                0x0000000000002a42                wait200us
                0x0000000000002a44                wait100us
                0x0000000000002a46                wait50us
                0x0000000000002a48                wait40us
                0x0000000000002a4a                wait30us
                0x0000000000002a4c                wait20us
                0x0000000000002a4e                wait10us
                0x0000000000002a50                wait5us
                0x0000000000002a52                wait4us
                0x0000000000002a54                wait3us
                0x0000000000002a56                wait2us
                0x0000000000002a58                wait1us
 .text          0x0000000000002a5c      0x602 ReadCapacity.o
                0x0000000000002a5c                getRLmultip
                0x0000000000002ae0                Scale_C_with_vcc
                0x0000000000002b80                ReadCapacity
 .text          0x000000000000305e      0x52e ReadInductance.o
                0x000000000000305e                ReadInductance
 .text          0x000000000000358c      0x138 ReadADC.o
                0x000000000000358c                ReadADC
                0x0000000000003682                W5msReadADC
                0x0000000000003698                W10msReadADC
                0x00000000000036ae                W20msReadADC
 .text          0x00000000000036c4      0x500 GetESR.o
                0x00000000000036c4                GetESR
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x0000000000003bc4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                0x0000000000003bc4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000003bc4       0x3e /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                0x0000000000003bc4                __mulsi3
 .text.libgcc   0x0000000000003c02       0x18 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
                0x0000000000003c02                __udivmodqi4
 .text.libgcc   0x0000000000003c1a       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000003c1a                __udivmodhi4
 .text.libgcc   0x0000000000003c42       0x44 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000003c42                __udivmodsi4
 .text.libgcc   0x0000000000003c86       0x36 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000003c86                __divmodsi4
 .text.libgcc   0x0000000000003cbc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000003cbc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000003cbc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000003cbc       0x42 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                0x0000000000003cbc                itoa
 .text.avr-libc
                0x0000000000003cfe       0x2c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                0x0000000000003cfe                utoa
 .text.avr-libc
                0x0000000000003d2a       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                0x0000000000003d2a                __eerd_byte_m168
 .text.avr-libc
                0x0000000000003d3a        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                0x0000000000003d3a                __eerd_word_m168
 .text.avr-libc
                0x0000000000003d46       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                0x0000000000003d46                __eewr_byte_m168
                0x0000000000003d48                __eewr_r18_m168
 .text.avr-libc
                0x0000000000003d62        0xa /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                0x0000000000003d62                __eewr_word_m168
 .text.avr-libc
                0x0000000000003d6c       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000003d6c                strrev
 .text.avr-libc
                0x0000000000003d8c       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                0x0000000000003d8c                __eerd_block_m168
                0x0000000000003d90                __eerd_blraw_m168
                0x0000000000003dac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003dac        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x0000000000003dac                exit
                0x0000000000003dac                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003dac        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003db0                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000003db0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 lcd-routines.o
 .data          0x0000000000800100        0x0 lcd_hw_4_bit.o
 .data          0x0000000000800100        0x2 main.o
                0x0000000000800100                RHmultip
 .data          0x0000000000800102        0x0 swuart.o
 .data          0x0000000000800102        0x0 wait1000ms.o
 .data          0x0000000000800102        0x0 ReadCapacity.o
 .data          0x0000000000800102        0x0 ReadInductance.o
 .data          0x0000000000800102        0x0 ReadADC.o
 .data          0x0000000000800102        0x0 GetESR.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x82
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800102        0x0 lcd-routines.o
 .bss           0x0000000000800102        0x0 lcd_hw_4_bit.o
 .bss           0x0000000000800102        0x0 main.o
 .bss           0x0000000000800102        0x0 swuart.o
 .bss           0x0000000000800102        0x0 wait1000ms.o
 .bss           0x0000000000800102        0x0 ReadCapacity.o
 .bss           0x0000000000800102        0x0 ReadInductance.o
 .bss           0x0000000000800102        0x0 ReadADC.o
 .bss           0x0000000000800102        0x0 GetESR.o
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800102       0x82 main.o
                0x0000000000800102                resis680mi
                0x0000000000800104                PartReady
                0x0000000000800105                NumOfDiodes
                0x0000000000800106                PartMode
                0x0000000000800107                PartFound
                0x0000000000800108                resis680pl
                0x000000000080010a                tmpval
                0x000000000080010b                mess_count
                0x000000000080010c                outval
                0x0000000000800118                resis
                0x0000000000800139                ADCconfig
                0x000000000080013f                ref_mv
                0x0000000000800141                tmpval2
                0x0000000000800142                WithReference
                0x0000000000800143                empty_count
                0x0000000000800144                ii
                0x0000000000800145                pin_combination
                0x0000000000800146                trans
                0x0000000000800155                ResistorsFound
                0x0000000000800156                gthvoltage
                0x0000000000800158                cap
                0x000000000080016a                load_diff
                0x000000000080016c                diodes
                0x0000000000800184                PROVIDE (__bss_end, .)
                0x0000000000003db0                __data_load_start = LOADADDR (.data)
                0x0000000000003db2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800184        0x0
                0x0000000000800184                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800184                PROVIDE (__noinit_end, .)
                0x0000000000800184                _end = .
                0x0000000000800184                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000      0x1c1
 *(.eeprom*)
 .eeprom        0x0000000000810000      0x1c1 main.o
                0x0000000000810000                RLtab
                0x000000000081005a                RHtab
                0x000000000081006c                TestRunning
                0x0000000000810077                BatWeak
                0x000000000081007c                BatEmpty
                0x0000000000810083                TestFailed2
                0x000000000081008c                Bauteil
                0x0000000000810091                Diode
                0x0000000000810099                GAK
                0x000000000081009e                Triac
                0x00000000008100a4                Thyristor
                0x00000000008100ae                Unknown
                0x00000000008100b7                TestFailed1
                0x00000000008100c7                OrBroken
                0x00000000008100d3                TestTimedOut
                0x00000000008100dc                ATE
                0x00000000008100e5                Bat_str
                0x00000000008100eb                OK_str
                0x00000000008100ee                mosfet_str
                0x00000000008100f3                jfet_str
                0x00000000008100f8                GateCap_str
                0x00000000008100fb                hfe_str
                0x00000000008100fe                NPN_str
                0x0000000000810103                PNP_str
                0x0000000000810108                N123_str
                0x000000000081010e                Uf_str
                0x0000000000810112                vt_str
                0x0000000000810117                Vgs_str
                0x000000000081011d                CapZeich
                0x0000000000810121                Cell_str
                0x0000000000810127                VCC_str
                0x000000000081012c                ESR_str
                0x0000000000810132                Lis_str
                0x0000000000810135                AnKat
                0x0000000000810139                KatAn
                0x000000000081013d                Dioden
                0x0000000000810142                Resistor_str
                0x0000000000810147                VERSION_str
                0x0000000000810155                RIHI
                0x000000000081015c                RILO
                0x0000000000810163                C0_str
                0x0000000000810167                MinCap_str
                0x000000000081016f                REF_C_str
                0x0000000000810176                REF_R_str
                0x000000000081017d                DiodeIcon1
                0x0000000000810185                DiodeIcon2
                0x000000000081018d                CapIcon
                0x0000000000810195                ResIcon1
                0x000000000081019d                ResIcon2
                0x00000000008101a5                PinRLtab
                0x00000000008101a8                PinADCtab
                0x00000000008101ab                R680pl
                0x00000000008101ad                R680mi
                0x00000000008101af                RefDiff
                0x00000000008101b0                PrefixTab
                0x00000000008101b7                ref_offset
                0x00000000008101b9                c_zero_tab
                0x00000000008101c0                EE_ESR_ZERO
                0x00000000008101c1                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xdbc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006cc      0x1b0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x000000000000087c      0x12c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                                        0x138 (size before relaxing)
 .stab          0x00000000000009a8       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000000a38       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000aa4       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                                         0xf0 (size before relaxing)
 .stab          0x0000000000000b88       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000000bdc       0xd8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000cb4      0x108 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                                        0x114 (size before relaxing)

.stabstr        0x0000000000000000      0x1d2
 *(.stabstr)
 .stabstr       0x0000000000000000      0x1d2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 lcd-routines.o
 .debug_aranges
                0x0000000000000020       0x20 main.o
 .debug_aranges
                0x0000000000000040       0x20 ReadCapacity.o
 .debug_aranges
                0x0000000000000060       0x20 ReadInductance.o
 .debug_aranges
                0x0000000000000080       0x20 ReadADC.o
 .debug_aranges
                0x00000000000000a0       0x20 GetESR.o

.debug_pubnames
                0x0000000000000000      0x711
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xc5 lcd-routines.o
 .debug_pubnames
                0x00000000000000c5      0x572 main.o
 .debug_pubnames
                0x0000000000000637       0x48 ReadCapacity.o
 .debug_pubnames
                0x000000000000067f       0x25 ReadInductance.o
 .debug_pubnames
                0x00000000000006a4       0x50 ReadADC.o
 .debug_pubnames
                0x00000000000006f4       0x1d GetESR.o

.debug_info     0x0000000000000000     0x27fd
 *(.debug_info)
 .debug_info    0x0000000000000000      0x264 lcd-routines.o
 .debug_info    0x0000000000000264     0x17c0 main.o
 .debug_info    0x0000000000001a24      0x4cf ReadCapacity.o
 .debug_info    0x0000000000001ef3      0x481 ReadInductance.o
 .debug_info    0x0000000000002374      0x1d2 ReadADC.o
 .debug_info    0x0000000000002546      0x2b7 GetESR.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x7bc
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xbe lcd-routines.o
 .debug_abbrev  0x00000000000000be      0x2a6 main.o
 .debug_abbrev  0x0000000000000364      0x18c ReadCapacity.o
 .debug_abbrev  0x00000000000004f0      0x113 ReadInductance.o
 .debug_abbrev  0x0000000000000603       0xb9 ReadADC.o
 .debug_abbrev  0x00000000000006bc      0x100 GetESR.o

.debug_line     0x0000000000000000     0x360b
 *(.debug_line)
 .debug_line    0x0000000000000000      0x2f9 lcd-routines.o
 .debug_line    0x00000000000002f9     0x22e6 main.o
 .debug_line    0x00000000000025df      0x586 ReadCapacity.o
 .debug_line    0x0000000000002b65      0x42d ReadInductance.o
 .debug_line    0x0000000000002f92      0x1ea ReadADC.o
 .debug_line    0x000000000000317c      0x48f GetESR.o

.debug_frame    0x0000000000000000      0x280
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xc0 lcd-routines.o
 .debug_frame   0x00000000000000c0       0xf0 main.o
 .debug_frame   0x00000000000001b0       0x40 ReadCapacity.o
 .debug_frame   0x00000000000001f0       0x20 ReadInductance.o
 .debug_frame   0x0000000000000210       0x50 ReadADC.o
 .debug_frame   0x0000000000000260       0x20 GetESR.o

.debug_str      0x0000000000000000      0x894
 *(.debug_str)
 .debug_str     0x0000000000000000      0x15e lcd-routines.o
                                        0x19c (size before relaxing)
 .debug_str     0x000000000000015e      0x5ea main.o
                                        0x6e5 (size before relaxing)
 .debug_str     0x0000000000000748       0x93 ReadCapacity.o
                                        0x28d (size before relaxing)
 .debug_str     0x00000000000007db       0x59 ReadInductance.o
                                        0x252 (size before relaxing)
 .debug_str     0x0000000000000834       0x40 ReadADC.o
                                        0x158 (size before relaxing)
 .debug_str     0x0000000000000874       0x20 GetESR.o
                                        0x18a (size before relaxing)

.debug_loc      0x0000000000000000     0x133a
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1e1 lcd-routines.o
 .debug_loc     0x00000000000001e1      0xab5 main.o
 .debug_loc     0x0000000000000c96      0x24d ReadCapacity.o
 .debug_loc     0x0000000000000ee3      0x265 ReadInductance.o
 .debug_loc     0x0000000000001148      0x119 ReadADC.o
 .debug_loc     0x0000000000001261       0xd9 GetESR.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TransistorTester.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x0000000000000000      0x21a
 .debug_pubtypes
                0x0000000000000000       0x2b lcd-routines.o
 .debug_pubtypes
                0x000000000000002b       0x80 main.o
 .debug_pubtypes
                0x00000000000000ab       0x74 ReadCapacity.o
 .debug_pubtypes
                0x000000000000011f       0x74 ReadInductance.o
 .debug_pubtypes
                0x0000000000000193       0x3b ReadADC.o
 .debug_pubtypes
                0x00000000000001ce       0x4c GetESR.o
