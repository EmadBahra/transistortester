Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                              main.o (utoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
                              lcd-routines.o (__eerd_byte_m168p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
                              main.o (__eerd_word_m168p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
                              main.o (__eewr_word_m168p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o) (strrev)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o) (__eerd_blraw_m168p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o) (__eewr_byte_m168p)

Allocating common symbols
Common symbol       size              file

display_time        0x2               main.o
PartReady           0x1               main.o
NumOfDiodes         0x1               main.o
PartMode            0x1               main.o
PartFound           0x1               main.o
cb                  0x1               main.o
tmpval              0x1               main.o
mess_count          0x1               main.o
outval              0xc               main.o
resis               0x15              main.o
rvmax               0x2               main.o
rxv                 0x2               main.o
ref_mv              0x2               main.o
tmpval2             0x1               main.o
empty_count         0x1               main.o
ii                  0x1               main.o
cpre                0x1               main.o
trans               0x7               main.o
ResistorsFound      0x1               main.o
cval_uncorrected    0x4               main.o
gthvoltage          0x2               main.o
rtst                0x2               main.o
ca                  0x1               main.o
diodes              0x18              main.o
cval                0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
LOAD lcd-routines.o
LOAD main.o
LOAD swuart.o
LOAD wait1000ms.o
LOAD CombineToLong.o
LOAD ReadADC.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x28b8
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068        0x4 main.o
                0x0000000000000068                C_Prefix_tab
                0x000000000000006c                . = ALIGN (0x2)
                0x000000000000006c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000006c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000006c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000006c                __ctors_start = .
 *(.ctors)
                0x000000000000006c                __ctors_end = .
                0x000000000000006c                __dtors_start = .
 *(.dtors)
                0x000000000000006c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000006c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
                0x000000000000006c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000006c        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000078       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000078                __do_copy_data
 .init4         0x000000000000008e       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009e        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a6        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
                0x00000000000000a6                __vector_22
                0x00000000000000a6                __vector_1
                0x00000000000000a6                __vector_24
                0x00000000000000a6                __vector_12
                0x00000000000000a6                __bad_interrupt
                0x00000000000000a6                __vector_6
                0x00000000000000a6                __vector_3
                0x00000000000000a6                __vector_23
                0x00000000000000a6                __vector_25
                0x00000000000000a6                __vector_11
                0x00000000000000a6                __vector_13
                0x00000000000000a6                __vector_17
                0x00000000000000a6                __vector_19
                0x00000000000000a6                __vector_7
                0x00000000000000a6                __vector_5
                0x00000000000000a6                __vector_4
                0x00000000000000a6                __vector_9
                0x00000000000000a6                __vector_2
                0x00000000000000a6                __vector_21
                0x00000000000000a6                __vector_15
                0x00000000000000a6                __vector_8
                0x00000000000000a6                __vector_14
                0x00000000000000a6                __vector_10
                0x00000000000000a6                __vector_16
                0x00000000000000a6                __vector_18
                0x00000000000000a6                __vector_20
 .text          0x00000000000000aa      0x144 lcd-routines.o
                0x00000000000000aa                lcd_enable
                0x00000000000000b4                lcd_send
                0x00000000000000fc                lcd_command
                0x0000000000000104                lcd_data
                0x000000000000010c                lcd_testpin
                0x0000000000000114                lcd_clear
                0x0000000000000120                lcd_init
                0x0000000000000176                lcd_string
                0x000000000000019e                lcd_fix_string
                0x00000000000001c0                lcd_fix_customchar
 .text          0x00000000000001ee     0x2458 main.o
                0x00000000000001ee                mVAusgabe
                0x0000000000000246                UfAusgabe
                0x000000000000026e                scale_intref_adc
                0x00000000000002f2                ChargePin10ms
                0x0000000000000334                CheckPins
                0x0000000000000e5e                EntladePins
                0x0000000000000f90                getRLmultip
                0x0000000000001014                ReadCapacity
                0x000000000000141a                RefVoltage
                0x00000000000014ac                lcd_clear_line
                0x00000000000014be                value_out
                0x00000000000015f8                lcd_show_format_cap
                0x0000000000001636                RvalOut
                0x000000000000167a                AutoCheck
                0x0000000000001cb6                main
 .text          0x0000000000002646        0x2 swuart.o
                0x0000000000002646                uart_putc
 .text          0x0000000000002648       0x4a wait1000ms.o
                0x0000000000002648                wait5s
                0x000000000000264a                wait4s
                0x000000000000264c                wait3s
                0x000000000000264e                wait2s
                0x0000000000002650                wait1000ms
                0x0000000000002650                wait1s
                0x0000000000002652                wait500ms
                0x0000000000002654                wait400ms
                0x0000000000002656                wait300ms
                0x0000000000002658                wait200ms
                0x000000000000265a                wait100ms
                0x000000000000265e                wait50ms
                0x0000000000002660                wait40ms
                0x0000000000002662                wait30ms
                0x0000000000002664                wait20ms
                0x0000000000002666                wait10ms
                0x0000000000002668                wait5ms
                0x000000000000266a                wait4ms
                0x000000000000266c                wait3ms
                0x000000000000266e                wait2ms
                0x0000000000002670                wait1ms
                0x0000000000002672                wait500us
                0x0000000000002674                wait400us
                0x0000000000002676                wait300us
                0x0000000000002678                wait200us
                0x000000000000267a                wait100us
                0x000000000000267c                wait50us
                0x000000000000267e                wait40us
                0x0000000000002680                wait30us
                0x0000000000002682                wait20us
                0x0000000000002684                wait10us
                0x0000000000002686                wait5us
                0x0000000000002688                wait4us
                0x000000000000268a                wait3us
                0x000000000000268c                wait2us
                0x000000000000268e                wait1us
 .text          0x0000000000002692        0x4 CombineToLong.o
                0x0000000000002692                CombineBI2Long
                0x0000000000002694                CombineII2Long
 .text          0x0000000000002696       0xc6 ReadADC.o
                0x0000000000002696                W20msReadADC
                0x000000000000269e                W5msReadADC
                0x00000000000026a2                ReadADC
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
 .text          0x000000000000275c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
                0x000000000000275c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000275c       0x3e /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                0x000000000000275c                __mulsi3
 .text.libgcc   0x000000000000279a       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000279a                __udivmodhi4
 .text.libgcc   0x00000000000027c2       0x44 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x00000000000027c2                __udivmodsi4
 .text.libgcc   0x0000000000002806        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000002806        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000002806        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000002806       0x2c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                0x0000000000002806                utoa
 .text.avr-libc
                0x0000000000002832       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
                0x0000000000002832                __eerd_byte_m168p
 .text.avr-libc
                0x0000000000002842        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
                0x0000000000002842                __eerd_word_m168p
 .text.avr-libc
                0x000000000000284e        0xa /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
                0x000000000000284e                __eewr_word_m168p
 .text.avr-libc
                0x0000000000002858       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000002858                strrev
 .text.avr-libc
                0x0000000000002878       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
                0x0000000000002878                __eerd_block_m168p
                0x000000000000287c                __eerd_blraw_m168p
 .text.avr-libc
                0x0000000000002898       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
                0x0000000000002898                __eewr_byte_m168p
                0x000000000000289a                __eewr_r18_m168p
                0x00000000000028b4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000028b4        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x00000000000028b4                exit
                0x00000000000028b4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000028b4        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000028b8                _etext = .

.data           0x0000000000800100        0x4 load address 0x00000000000028b8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
 .data          0x0000000000800100        0x0 lcd-routines.o
 .data          0x0000000000800100        0x4 main.o
                0x0000000000800100                RHmultip
                0x0000000000800102                minmul
                0x0000000000800103                mindiv
 .data          0x0000000000800104        0x0 swuart.o
 .data          0x0000000000800104        0x0 wait1000ms.o
 .data          0x0000000000800104        0x0 CombineToLong.o
 .data          0x0000000000800104        0x0 ReadADC.o
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end, .)

.bss            0x0000000000800104       0x61
                0x0000000000800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
 .bss           0x0000000000800104        0x0 lcd-routines.o
 .bss           0x0000000000800104        0x0 main.o
 .bss           0x0000000000800104        0x0 swuart.o
 .bss           0x0000000000800104        0x0 wait1000ms.o
 .bss           0x0000000000800104        0x0 CombineToLong.o
 .bss           0x0000000000800104        0x0 ReadADC.o
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800104       0x61 main.o
                0x0000000000800104                display_time
                0x0000000000800106                PartReady
                0x0000000000800107                NumOfDiodes
                0x0000000000800108                PartMode
                0x0000000000800109                PartFound
                0x000000000080010a                cb
                0x000000000080010b                tmpval
                0x000000000080010c                mess_count
                0x000000000080010d                outval
                0x0000000000800119                resis
                0x000000000080012e                rvmax
                0x0000000000800130                rxv
                0x0000000000800132                ref_mv
                0x0000000000800134                tmpval2
                0x0000000000800135                empty_count
                0x0000000000800136                ii
                0x0000000000800137                cpre
                0x0000000000800138                trans
                0x000000000080013f                ResistorsFound
                0x0000000000800140                cval_uncorrected
                0x0000000000800144                gthvoltage
                0x0000000000800146                rtst
                0x0000000000800148                ca
                0x0000000000800149                diodes
                0x0000000000800161                cval
                0x0000000000800165                PROVIDE (__bss_end, .)
                0x00000000000028b8                __data_load_start = LOADADDR (.data)
                0x00000000000028bc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800165        0x0
                0x0000000000800165                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800165                PROVIDE (__noinit_end, .)
                0x0000000000800165                _end = .
                0x0000000000800165                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000      0x1e1
 *(.eeprom*)
 .eeprom        0x0000000000810000      0x1e1 main.o
                0x0000000000810000                RLtab
                0x000000000081005a                RHtab
                0x000000000081006c                TestRunning
                0x0000000000810077                BatWeak
                0x000000000081007c                BatEmpty
                0x0000000000810083                TestFailed2
                0x000000000081008c                Bauteil
                0x0000000000810091                Diode
                0x0000000000810099                GAK
                0x000000000081009e                Triac
                0x00000000008100a4                Thyristor
                0x00000000008100ae                Unknown
                0x00000000008100b7                TestFailed1
                0x00000000008100c7                OrBroken
                0x00000000008100d3                Bat
                0x00000000008100d9                OK
                0x00000000008100dc                mosfet
                0x00000000008100e2                jfet
                0x00000000008100e7                GateCap
                0x00000000008100ea                hfestr
                0x00000000008100ed                NPN
                0x00000000008100f2                PNP
                0x00000000008100f7                ebcstr
                0x00000000008100fd                gds
                0x0000000000810102                Uf
                0x0000000000810106                vt
                0x000000000081010a                CapZeich
                0x000000000081010e                AnKat
                0x0000000000810112                KatAn
                0x0000000000810116                Dioden
                0x000000000081011b                Resistor_str
                0x0000000000810120                TestTimedOut
                0x0000000000810129                VERSION
                0x0000000000810137                mVT
                0x000000000081013b                URefT
                0x0000000000810140                RHfakt
                0x0000000000810145                RLfakt
                0x000000000081014b                ATE
                0x0000000000810158                SELFTEST
                0x0000000000810168                RH1L
                0x000000000081016c                RH1H
                0x0000000000810170                RILO
                0x000000000081017c                RIHI
                0x0000000000810183                RLRL
                0x0000000000810191                RHRH
                0x000000000081019f                RELPROBE
                0x00000000008101ad                DiodeIcon1
                0x00000000008101b5                DiodeIcon2
                0x00000000008101bd                CapIcon
                0x00000000008101c5                ResIcon1
                0x00000000008101cd                ResIcon2
                0x00000000008101d5                PinRLtab
                0x00000000008101d8                PinADCtab
                0x00000000008101db                R680pl
                0x00000000008101dd                R680mi
                0x00000000008101df                cap_null
                0x00000000008101e1                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xc0c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o
 .stab          0x00000000000006cc      0x12c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                                        0x138 (size before relaxing)
 .stab          0x00000000000007f8       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168p.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000000888       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168p.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000008f4       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168p.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000000948       0xd8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000a20      0x108 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168p.o)
                                        0x114 (size before relaxing)
 .stab          0x0000000000000b28       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168p.o)
                                         0xf0 (size before relaxing)

.stabstr        0x0000000000000000      0x1a0
 *(.stabstr)
 .stabstr       0x0000000000000000      0x1a0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 lcd-routines.o
 .debug_aranges
                0x0000000000000020       0x20 main.o

.debug_pubnames
                0x0000000000000000      0x583
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xaf lcd-routines.o
 .debug_pubnames
                0x00000000000000af      0x4d4 main.o

.debug_info     0x0000000000000000     0x1811
 *(.debug_info)
 .debug_info    0x0000000000000000      0x20e lcd-routines.o
 .debug_info    0x000000000000020e     0x1603 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x34d
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xaf lcd-routines.o
 .debug_abbrev  0x00000000000000af      0x29e main.o

.debug_line     0x0000000000000000     0x25ea
 *(.debug_line)
 .debug_line    0x0000000000000000      0x2b5 lcd-routines.o
 .debug_line    0x00000000000002b5     0x2335 main.o

.debug_frame    0x0000000000000000      0x1b0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xb0 lcd-routines.o
 .debug_frame   0x00000000000000b0      0x100 main.o

.debug_str      0x0000000000000000      0x644
 *(.debug_str)
 .debug_str     0x0000000000000000      0x131 lcd-routines.o
                                        0x16f (size before relaxing)
 .debug_str     0x0000000000000131      0x513 main.o
                                        0x5fc (size before relaxing)

.debug_loc      0x0000000000000000      0xfe3
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x115 lcd-routines.o
 .debug_loc     0x0000000000000115      0xece main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TransistorTester.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x0000000000000000       0x5f
 .debug_pubtypes
                0x0000000000000000       0x1e lcd-routines.o
 .debug_pubtypes
                0x000000000000001e       0x41 main.o
