Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
                              main.o (__udivmodqi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                              main.o (itoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                              main.o (utoa)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                              lcd-routines.o (__eerd_byte_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                              main.o (__eerd_word_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                              main.o (__eewr_byte_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                              main.o (__eewr_word_m168)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o) (__eerd_blraw_m168)

Allocating common symbols
Common symbol       size              file

resis680mi          0x2               main.o
PartReady           0x1               main.o
NumOfDiodes         0x1               main.o
PartMode            0x1               main.o
PartFound           0x1               main.o
resis680pl          0x2               main.o
tmpval              0x1               main.o
mess_count          0x1               main.o
outval              0xc               main.o
resis               0x21              main.o
ADCconfig           0x6               main.o
ref_mv              0x2               main.o
tmpval2             0x1               main.o
WithReference       0x1               main.o
empty_count         0x1               main.o
ii                  0x1               main.o
pin_combination     0x1               main.o
ovcnt16             0x2               main.o
trans               0xf               main.o
ResistorsFound      0x1               main.o
gthvoltage          0x2               main.o
unfinished          0x1               main.o
cap                 0x12              main.o
load_diff           0x2               main.o
diodes              0x18              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
LOAD lcd-routines.o
LOAD lcd_hw_4_bit.o
LOAD main.o
LOAD swuart.o
LOAD wait1000ms.o
LOAD ReadCapacity.o
LOAD ReadInductance.o
LOAD ReadADC.o
LOAD GetESR.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3d4e
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0xb5 main.o
                0x0000000000000068                LogTab
                0x00000000000000c4                SELFTEST
                0x00000000000000d4                RELPROBE
                0x00000000000000e3                URefT
                0x00000000000000e8                RHfakt
                0x00000000000000ed                RH1L
                0x00000000000000f1                RH1H
                0x00000000000000f5                RLRL
                0x0000000000000103                RHRH
                0x0000000000000111                RHRL
                0x0000000000000117                T50HZ
                0x000000000000011e                . = ALIGN (0x2)
 *fill*         0x000000000000011d        0x1 00
                0x000000000000011e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000011e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000011e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000011e                __ctors_start = .
 *(.ctors)
                0x000000000000011e                __ctors_end = .
                0x000000000000011e                __dtors_start = .
 *(.dtors)
                0x000000000000011e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000011e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x000000000000011e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000011e        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000012a       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x000000000000012a                __do_copy_data
 .init4         0x0000000000000140       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000140                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000150        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000000000000158        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
                0x0000000000000158                __vector_22
                0x0000000000000158                __vector_1
                0x0000000000000158                __vector_24
                0x0000000000000158                __vector_12
                0x0000000000000158                __bad_interrupt
                0x0000000000000158                __vector_6
                0x0000000000000158                __vector_3
                0x0000000000000158                __vector_23
                0x0000000000000158                __vector_25
                0x0000000000000158                __vector_11
                0x0000000000000158                __vector_17
                0x0000000000000158                __vector_19
                0x0000000000000158                __vector_5
                0x0000000000000158                __vector_4
                0x0000000000000158                __vector_9
                0x0000000000000158                __vector_2
                0x0000000000000158                __vector_15
                0x0000000000000158                __vector_8
                0x0000000000000158                __vector_14
                0x0000000000000158                __vector_16
                0x0000000000000158                __vector_18
                0x0000000000000158                __vector_20
 .text          0x000000000000015c      0x1aa lcd-routines.o
                0x000000000000015c                lcd_data
                0x00000000000001be                lcd_space
                0x00000000000001c6                lcd_testpin
                0x00000000000001ce                uart_newline
                0x00000000000001dc                lcd_command
                0x00000000000001fc                lcd_clear
                0x0000000000000216                lcd_init
                0x000000000000026e                lcd_string
                0x0000000000000296                lcd_pgm_string
                0x00000000000002b6                lcd_fix_string
                0x00000000000002d8                lcd_fix_customchar
 .text          0x0000000000000306       0x5c lcd_hw_4_bit.o
                0x0000000000000306                _lcd_hw_write
 .text          0x0000000000000362     0x25f8 main.o
                0x0000000000000362                __vector_7
                0x0000000000000364                __vector_21
                0x0000000000000366                EntladePins
                0x000000000000049c                RefVoltage
                0x000000000000053c                lcd_clear_line
                0x000000000000054c                DisplayValue
                0x00000000000006b8                RvalOut
                0x00000000000006ec                mVAusgabe
                0x000000000000071c                UfAusgabe
                0x0000000000000744                sleep_5ms
                0x000000000000078a                ChargePin10ms
                0x00000000000007c0                CheckPins
                0x0000000000001546                PinLayout
                0x00000000000015ac                AutoCheck
                0x0000000000001f30                main
 .text          0x000000000000295a       0x40 swuart.o
                0x000000000000295a                uart_putc
 .text          0x000000000000299a       0x4a wait1000ms.o
                0x000000000000299a                wait5s
                0x000000000000299c                wait4s
                0x000000000000299e                wait3s
                0x00000000000029a0                wait2s
                0x00000000000029a2                wait1000ms
                0x00000000000029a2                wait1s
                0x00000000000029a4                wait500ms
                0x00000000000029a6                wait400ms
                0x00000000000029a8                wait300ms
                0x00000000000029aa                wait200ms
                0x00000000000029ac                wait100ms
                0x00000000000029b0                wait50ms
                0x00000000000029b2                wait40ms
                0x00000000000029b4                wait30ms
                0x00000000000029b6                wait20ms
                0x00000000000029b8                wait10ms
                0x00000000000029ba                wait5ms
                0x00000000000029bc                wait4ms
                0x00000000000029be                wait3ms
                0x00000000000029c0                wait2ms
                0x00000000000029c2                wait1ms
                0x00000000000029c4                wait500us
                0x00000000000029c6                wait400us
                0x00000000000029c8                wait300us
                0x00000000000029ca                wait200us
                0x00000000000029cc                wait100us
                0x00000000000029ce                wait50us
                0x00000000000029d0                wait40us
                0x00000000000029d2                wait30us
                0x00000000000029d4                wait20us
                0x00000000000029d6                wait10us
                0x00000000000029d8                wait5us
                0x00000000000029da                wait4us
                0x00000000000029dc                wait3us
                0x00000000000029de                wait2us
                0x00000000000029e0                wait1us
 .text          0x00000000000029e4      0x6ae ReadCapacity.o
                0x00000000000029e4                getRLmultip
                0x0000000000002a68                Scale_C_with_vcc
                0x0000000000002b08                ReadCapacity
                0x000000000000305e                __vector_13
                0x000000000000308c                __vector_10
 .text          0x0000000000003092      0x52e ReadInductance.o
                0x0000000000003092                ReadInductance
 .text          0x00000000000035c0      0x12a ReadADC.o
                0x00000000000035c0                ReadADC
                0x00000000000036a8                W5msReadADC
                0x00000000000036be                W10msReadADC
                0x00000000000036d4                W20msReadADC
 .text          0x00000000000036ea      0x478 GetESR.o
                0x00000000000036ea                GetESR
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x0000000000003b62        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                0x0000000000003b62                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000003b62       0x3e /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                0x0000000000003b62                __mulsi3
 .text.libgcc   0x0000000000003ba0       0x18 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
                0x0000000000003ba0                __udivmodqi4
 .text.libgcc   0x0000000000003bb8       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000003bb8                __udivmodhi4
 .text.libgcc   0x0000000000003be0       0x44 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000003be0                __udivmodsi4
 .text.libgcc   0x0000000000003c24       0x36 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000003c24                __divmodsi4
 .text.libgcc   0x0000000000003c5a        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000003c5a        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000003c5a        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000003c5a       0x42 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                0x0000000000003c5a                itoa
 .text.avr-libc
                0x0000000000003c9c       0x2c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                0x0000000000003c9c                utoa
 .text.avr-libc
                0x0000000000003cc8       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                0x0000000000003cc8                __eerd_byte_m168
 .text.avr-libc
                0x0000000000003cd8        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                0x0000000000003cd8                __eerd_word_m168
 .text.avr-libc
                0x0000000000003ce4       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                0x0000000000003ce4                __eewr_byte_m168
                0x0000000000003ce6                __eewr_r18_m168
 .text.avr-libc
                0x0000000000003d00        0xa /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                0x0000000000003d00                __eewr_word_m168
 .text.avr-libc
                0x0000000000003d0a       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000003d0a                strrev
 .text.avr-libc
                0x0000000000003d2a       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                0x0000000000003d2a                __eerd_block_m168
                0x0000000000003d2e                __eerd_blraw_m168
                0x0000000000003d4a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003d4a        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x0000000000003d4a                exit
                0x0000000000003d4a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003d4a        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003d4e                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000003d4e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 lcd-routines.o
 .data          0x0000000000800100        0x0 lcd_hw_4_bit.o
 .data          0x0000000000800100        0x2 main.o
                0x0000000000800100                RHmultip
 .data          0x0000000000800102        0x0 swuart.o
 .data          0x0000000000800102        0x0 wait1000ms.o
 .data          0x0000000000800102        0x0 ReadCapacity.o
 .data          0x0000000000800102        0x0 ReadInductance.o
 .data          0x0000000000800102        0x0 ReadADC.o
 .data          0x0000000000800102        0x0 GetESR.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x85
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800102        0x0 lcd-routines.o
 .bss           0x0000000000800102        0x0 lcd_hw_4_bit.o
 .bss           0x0000000000800102        0x0 main.o
 .bss           0x0000000000800102        0x0 swuart.o
 .bss           0x0000000000800102        0x0 wait1000ms.o
 .bss           0x0000000000800102        0x0 ReadCapacity.o
 .bss           0x0000000000800102        0x0 ReadInductance.o
 .bss           0x0000000000800102        0x0 ReadADC.o
 .bss           0x0000000000800102        0x0 GetESR.o
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800102       0x85 main.o
                0x0000000000800102                resis680mi
                0x0000000000800104                PartReady
                0x0000000000800105                NumOfDiodes
                0x0000000000800106                PartMode
                0x0000000000800107                PartFound
                0x0000000000800108                resis680pl
                0x000000000080010a                tmpval
                0x000000000080010b                mess_count
                0x000000000080010c                outval
                0x0000000000800118                resis
                0x0000000000800139                ADCconfig
                0x000000000080013f                ref_mv
                0x0000000000800141                tmpval2
                0x0000000000800142                WithReference
                0x0000000000800143                empty_count
                0x0000000000800144                ii
                0x0000000000800145                pin_combination
                0x0000000000800146                ovcnt16
                0x0000000000800148                trans
                0x0000000000800157                ResistorsFound
                0x0000000000800158                gthvoltage
                0x000000000080015a                unfinished
                0x000000000080015b                cap
                0x000000000080016d                load_diff
                0x000000000080016f                diodes
                0x0000000000800187                PROVIDE (__bss_end, .)
                0x0000000000003d4e                __data_load_start = LOADADDR (.data)
                0x0000000000003d50                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800187        0x0
                0x0000000000800187                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800187                PROVIDE (__noinit_end, .)
                0x0000000000800187                _end = .
                0x0000000000800187                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000      0x1bc
 *(.eeprom*)
 .eeprom        0x0000000000810000      0x1bc main.o
                0x0000000000810000                RLtab
                0x000000000081005a                RHtab
                0x000000000081006c                TestRunning
                0x0000000000810077                BatWeak
                0x000000000081007c                BatEmpty
                0x0000000000810083                TestFailed2
                0x000000000081008c                Bauteil
                0x0000000000810091                Diode
                0x0000000000810099                Triac
                0x000000000081009f                Thyristor
                0x00000000008100a9                Unknown
                0x00000000008100b2                TestFailed1
                0x00000000008100c2                OrBroken
                0x00000000008100ce                TestTimedOut
                0x00000000008100d7                ATE
                0x00000000008100e0                Bat_str
                0x00000000008100e6                OK_str
                0x00000000008100e9                mosfet_str
                0x00000000008100ee                jfet_str
                0x00000000008100f3                GateCap_str
                0x00000000008100f6                hfe_str
                0x00000000008100f9                NPN_str
                0x00000000008100fe                PNP_str
                0x0000000000810103                N123_str
                0x0000000000810109                Uf_str
                0x000000000081010d                vt_str
                0x0000000000810112                Vgs_str
                0x0000000000810118                CapZeich
                0x000000000081011c                Cell_str
                0x0000000000810122                VCC_str
                0x0000000000810127                ESR_str
                0x000000000081012d                Lis_str
                0x0000000000810130                AnKat
                0x0000000000810134                KatAn
                0x0000000000810138                Dioden
                0x000000000081013d                Resistor_str
                0x0000000000810142                VERSION_str
                0x0000000000810150                RIHI
                0x0000000000810157                RILO
                0x000000000081015e                C0_str
                0x0000000000810162                MinCap_str
                0x000000000081016a                REF_C_str
                0x0000000000810171                REF_R_str
                0x0000000000810178                DiodeIcon1
                0x0000000000810180                DiodeIcon2
                0x0000000000810188                CapIcon
                0x0000000000810190                ResIcon1
                0x0000000000810198                ResIcon2
                0x00000000008101a0                PinRLtab
                0x00000000008101a3                PinADCtab
                0x00000000008101a6                R680pl
                0x00000000008101a8                R680mi
                0x00000000008101aa                RefDiff
                0x00000000008101ab                PrefixTab
                0x00000000008101b2                ref_offset
                0x00000000008101b4                c_zero_tab
                0x00000000008101bb                EE_ESR_ZERO
                0x00000000008101bc                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xdbc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006cc      0x1b0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x000000000000087c      0x12c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(utoa.o)
                                        0x138 (size before relaxing)
 .stab          0x00000000000009a8       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000000a38       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_word_atmega168.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000aa4       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                                         0xf0 (size before relaxing)
 .stab          0x0000000000000b88       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_word_atmega168.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000000bdc       0xd8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strrev.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000cb4      0x108 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega168.o)
                                        0x114 (size before relaxing)

.stabstr        0x0000000000000000      0x1d2
 *(.stabstr)
 .stabstr       0x0000000000000000      0x1d2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 lcd-routines.o
 .debug_aranges
                0x0000000000000020       0x20 main.o
 .debug_aranges
                0x0000000000000040       0x20 ReadCapacity.o
 .debug_aranges
                0x0000000000000060       0x20 ReadInductance.o
 .debug_aranges
                0x0000000000000080       0x20 ReadADC.o
 .debug_aranges
                0x00000000000000a0       0x20 GetESR.o

.debug_pubnames
                0x0000000000000000      0x752
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xc5 lcd-routines.o
 .debug_pubnames
                0x00000000000000c5      0x593 main.o
 .debug_pubnames
                0x0000000000000658       0x68 ReadCapacity.o
 .debug_pubnames
                0x00000000000006c0       0x25 ReadInductance.o
 .debug_pubnames
                0x00000000000006e5       0x50 ReadADC.o
 .debug_pubnames
                0x0000000000000735       0x1d GetESR.o

.debug_info     0x0000000000000000     0x28f2
 *(.debug_info)
 .debug_info    0x0000000000000000      0x264 lcd-routines.o
 .debug_info    0x0000000000000264     0x1842 main.o
 .debug_info    0x0000000000001aa6      0x524 ReadCapacity.o
 .debug_info    0x0000000000001fca      0x481 ReadInductance.o
 .debug_info    0x000000000000244b      0x1d2 ReadADC.o
 .debug_info    0x000000000000261d      0x2d5 GetESR.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x7c5
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xbe lcd-routines.o
 .debug_abbrev  0x00000000000000be      0x2af main.o
 .debug_abbrev  0x000000000000036d      0x18c ReadCapacity.o
 .debug_abbrev  0x00000000000004f9      0x113 ReadInductance.o
 .debug_abbrev  0x000000000000060c       0xb9 ReadADC.o
 .debug_abbrev  0x00000000000006c5      0x100 GetESR.o

.debug_line     0x0000000000000000     0x35e1
 *(.debug_line)
 .debug_line    0x0000000000000000      0x2f9 lcd-routines.o
 .debug_line    0x00000000000002f9     0x2290 main.o
 .debug_line    0x0000000000002589      0x5e6 ReadCapacity.o
 .debug_line    0x0000000000002b6f      0x42d ReadInductance.o
 .debug_line    0x0000000000002f9c      0x1e8 ReadADC.o
 .debug_line    0x0000000000003184      0x45d GetESR.o

.debug_frame    0x0000000000000000      0x2b0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xc0 lcd-routines.o
 .debug_frame   0x00000000000000c0      0x100 main.o
 .debug_frame   0x00000000000001c0       0x60 ReadCapacity.o
 .debug_frame   0x0000000000000220       0x20 ReadInductance.o
 .debug_frame   0x0000000000000240       0x50 ReadADC.o
 .debug_frame   0x0000000000000290       0x20 GetESR.o

.debug_str      0x0000000000000000      0x8e5
 *(.debug_str)
 .debug_str     0x0000000000000000      0x15e lcd-routines.o
                                        0x19c (size before relaxing)
 .debug_str     0x000000000000015e      0x607 main.o
                                        0x711 (size before relaxing)
 .debug_str     0x0000000000000765       0xa3 ReadCapacity.o
                                        0x2b0 (size before relaxing)
 .debug_str     0x0000000000000808       0x62 ReadInductance.o
                                        0x253 (size before relaxing)
 .debug_str     0x000000000000086a       0x40 ReadADC.o
                                        0x158 (size before relaxing)
 .debug_str     0x00000000000008aa       0x3b GetESR.o
                                        0x1a5 (size before relaxing)

.debug_loc      0x0000000000000000     0x13f1
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1e1 lcd-routines.o
 .debug_loc     0x00000000000001e1      0xb6f main.o
 .debug_loc     0x0000000000000d50      0x20c ReadCapacity.o
 .debug_loc     0x0000000000000f5c      0x265 ReadInductance.o
 .debug_loc     0x00000000000011c1      0x131 ReadADC.o
 .debug_loc     0x00000000000012f2       0xff GetESR.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TransistorTester.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x0000000000000000      0x21a
 .debug_pubtypes
                0x0000000000000000       0x2b lcd-routines.o
 .debug_pubtypes
                0x000000000000002b       0x80 main.o
 .debug_pubtypes
                0x00000000000000ab       0x74 ReadCapacity.o
 .debug_pubtypes
                0x000000000000011f       0x74 ReadInductance.o
 .debug_pubtypes
                0x0000000000000193       0x3b ReadADC.o
 .debug_pubtypes
                0x00000000000001ce       0x4c GetESR.o
